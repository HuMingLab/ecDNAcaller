#!/bin/bash

echo "Logistic Regression-Based ecDNAcaller"
sleep 0.5

script_path="$(readlink -f "$0")"
script_dir="$(dirname "$script_path")"

while getopts "i:o:p:t:s:" option; do
  case "${option}" in
  i) input_dir=${OPTARG} ;;    # Input directory
  o) output_dir=${OPTARG} ;;   # Output directory
  p) prob_cutoff=${OPTARG} ;;  # Probability cutoff
  t) max_cores=${OPTARG} ;;    # Max cores for parallel processing
  s) summary_only=${OPTARG} ;; # Summary-only mode
  \?) ;;
  esac
done

directories=$(find "$input_dir" -mindepth 1 -maxdepth 1 -type d | grep -Ev '/\.DS_Store$' | sort -n)

####################
cnv_name="1000000.CNV.bedGraph"
mat_name="matrix.mtx"
lm_dir=$script_dir"/lm_coef_model.txt"
####################

if [[ -z $script_dir || -z $lm_dir || -z $cnv_name || -z $mat_name || -z $input_dir || -z $prob_cutoff || -z $output_dir ]]; then
  echo "Missing one or more internal or external arguments." >&2
  exit 1
fi

summary_only_lower=$(echo "$summary_only" | tr '[:upper:]' '[:lower:]')
sample_name=$(basename "$input_dir")

num_cells=$(echo "$directories" | wc -l | sed 's/^[[:space:]]*//')
echo "Sample $sample_name | Found $num_cells cells..."
sleep 0.5

if [[ "$summary_only_lower" != "1" && "$summary_only_lower" != "true" && "$summary_only_lower" != "t" ]]; then
  echo "Sample $sample_name | Processing mode."
  sleep 0.5

  mkdir -p "$output_dir/ecDNA_prediction_$sample_name"

  export script_dir
  export cell_name
  export lm_dir
  export cnv_name
  export mat_name
  export input_dir
  export prob_cutoff
  export output_dir

  execute_command() {
    cell_dir="$1"
    python $script_dir/_process.py "$cell_dir" "$script_dir" "$lm_dir" "$cnv_name" "$mat_name" "$input_dir" "$output_dir"
  }

  export -f execute_command

  echo "$directories" | parallel -j $max_cores execute_command

else
  echo "Sample $sample_name | Summary-only mode."
  sleep 0.5

fi

list_results=$(find "$output_dir/ecDNA_prediction_$sample_name" -mindepth 1 -maxdepth 1 -type f | grep -Ev '/\.DS_Store$' | sort -n)
num_results=$(echo "$list_results" | wc -l | sed 's/^[[:space:]]*//')

if [[ $num_results -ne $num_cells ]]; then
  echo "Sample $sample_name | Error: Processing incomplete."

  exit 1
fi

python $script_dir/_summarize.py "$input_dir" "$output_dir" "$prob_cutoff"

exit 0
